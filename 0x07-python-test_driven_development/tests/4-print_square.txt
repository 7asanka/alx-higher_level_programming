doctest for "print square"
===========================

Imports the function:
	>>> print_square = __import__('4-print_square').print_square

check for docstring in module:
	>>> m = __import__('4-print_square').__doc__
	>>> len(m) > 1
	True

Check for docstring in function:
	>>> f = __import__('4-print_square').print_square.__doc__
	>>> len(f) > 1
	True

Expected success cases
======================

Testing for positive int:
	>>> print_square(4)
	####
	####
	####
	####

Expected failure cases
======================

Testing for negative int:
	>>> print_square(-5)
	Traceback (most recent call last):
	...
	ValueError: size must be >= 0

Testing for non int numbers:
	>>> print_square(2.5)
	Traceback (most recent call last):
	...
	TypeError: size must be an integer
	>>> print_square(-5.9)
	Traceback (most recent call last):
	...
	TypeError: size must be an integer

Testing for non number types:
	>>> print_square("5")
	Traceback (most recent call last):
	...
	TypeError: size must be an integer
	>>> print_square([4, 6, 8])
	Traceback (most recent call last):
	...
	TypeError: size must be an integer

Testing for no args:
	>>> print_square()
	Traceback (most recent call last):
	...
	TypeError: print_square() missing 1 required positional argument: 'size'

Testing for more than one args:
	>>> print_square(4, 5)
	Traceback (most recent call last):
	...
	TypeError: print_square() takes 1 positional argument but 2 were given
